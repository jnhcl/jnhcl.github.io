<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>江南何采莲</title>
  
  <subtitle>MyBlog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-07T07:10:10.366Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zsy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue &amp; cordova</title>
    <link href="http://yoursite.com/2018/07/07/vue-cordova/"/>
    <id>http://yoursite.com/2018/07/07/vue-cordova/</id>
    <published>2018-07-07T07:09:11.000Z</published>
    <updated>2018-07-07T07:10:10.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hybrid平台构建：（cordova-vue-webpack）"><a href="#Hybrid平台构建：（cordova-vue-webpack）" class="headerlink" title="Hybrid平台构建：（cordova + vue + webpack）"></a>Hybrid平台构建：（cordova + vue + webpack）</h1><ul><li>cordova</li></ul><hr><p>本文阐述了如何为Hybird移动应用构建开发平台，包含以下内容</p><ol><li>Cordova + vue + webpack</li><li>Jest/Mocha-Karma 测试</li><li>Nighwatch 函数测试</li><li>浏览器预览</li><li>热重载</li><li>打包成Android/IOS应用</li></ol><p>###何为Hybird应用</p><blockquote><p>所谓Hybird应用，即为一个内嵌于原生应用中运行的网站。其中webview相关代码部分是即时翻译运行的，而其中原生部分在应用运行之前就已编译成机器码。</p></blockquote><p>###准备环境</p><blockquote><p>unbantu Deepin 15.6<br>node.js v9.8.0<br>cordova v6.0.0<br>vue v2.9.3</p></blockquote><p>###构建步骤</p><ol><li><p>创建cordova项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova create hybird-base</span><br></pre></td></tr></table></figure></li><li><p>创建vue项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack hybird-test</span><br></pre></td></tr></table></figure></li><li><p>合并cordova和vue项目</p><blockquote><p>此时的cordova项目结构如下</p></blockquote><p><img src="/home/zsy/Pictures/tree.png" alt="tree"></p><blockquote><p>删除www下的内容，因为这是cordova将打包到移动设备的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> rm -r ./www</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>修改vue项目./config/index.js的打包命令，修改index和assertsRoot路径为./www，修改assertsPublicPath路径为空串，因为该项目需要到移动设备中运行，视图的显示应该来源于file:///而非是web服务器</p><p><img src="/home/zsy/Pictures/path.png" alt="path"></p><p>打包成功后的www目录如下</p><p><img src="/home/zsy/Pictures/tree2.png" alt="tree2"></p><p>可以通过file:///协议访问index.html，即将该文件以chrome打开</p><p><img src="/home/zsy/Pictures/page.png" alt="page"></p><p>接下来需要通过修改Content-Security-Policy以便允许本地socket通信服务。即添加connect-src ‘self’ ws:;</p><p><img src="/home/zsy/Pictures/code.png" alt="code"></p><p>将www移到cordova目录之下</p></blockquote></li><li><p>在Android下运行</p><blockquote><p>将www移到cordova项目根目录下</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cordova platform add android</span><br><span class="line">cordova run android</span><br></pre></td></tr></table></figure><p>​</p><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hybrid平台构建：（cordova-vue-webpack）&quot;&gt;&lt;a href=&quot;#Hybrid平台构建：（cordova-vue-webpack）&quot; class=&quot;headerlink&quot; title=&quot;Hybrid平台构建：（cordova + vue + 
      
    
    </summary>
    
    
      <category term="cordova" scheme="http://yoursite.com/tags/cordova/"/>
    
  </entry>
  
</feed>
