<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>江南何采莲</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-07T12:55:17.044Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zsy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>朴素贝叶斯</title>
    <link href="http://yoursite.com/2018/07/07/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/"/>
    <id>http://yoursite.com/2018/07/07/朴素贝叶斯/</id>
    <published>2018-07-07T12:45:58.000Z</published>
    <updated>2018-07-07T12:55:17.044Z</updated>
    
    <content type="html"><![CDATA[<p>###　数据链接<br><a href="http://www.lintcode.com/ai/spam-message-classification/overview" target="_blank" rel="noopener">垃圾短信分类</a></p><p>###　解析<br>设一个点(x,y)，对(x,y)进行分类(1,2)，我们可以设每个点分别属于两个类别的概率：</p><blockquote><p>如果p1(x,y) &gt; p2(x,y),那么类别为1<br>如果p1(x,y) &lt; p2(x,y),那么类别为2</p></blockquote><p>由贝叶斯概率我们有<br>$$p(c|x,y) = \frac {p(x,y|c)p(c)}{p(x,y)}\dots（1）$$<br>对于二分类可见<br>           $$p1 \rightarrow p(1|x,y)$$<br>           $$p2 \rightarrow p(2|x,y)$$</p><p>观察公式一右边.<br>根据大数定理，当数据集具有一定规模时，我们可以以频率逼近概率。<br>右边的概率可以由统计而得</p><p>因此朴素贝叶斯法则主要在于对数据的统计，步骤如下：</p><blockquote><ol><li>分词，生成词向量空间（英文文本无需如此，中文文本可以使用jieba分词工具）</li><li>对于每个向量，计算其向量空间坐标(每个特征词出现次数，即词袋)</li><li>   1)计算出p(c)，即每个类别出现概率<br>   2)对于p(x,y)，可以统计出所有的单变量，再使用乘法原理即可<br>   3)对于p(x,y|c)可以统计类别c下的所有(x,y)的出现次数</li><li>计算对于给定词向量的p1,p2，答案为其中值较大者</li></ol></blockquote><p>###　《机器学习实战中》给出了一个优化：<br>考虑概率很小以及一些为0的值会导致乘完出现0，所以使用对数代替p（由于对数函数是单调递增函数，因此同样很好度量）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">textParse1</span><span class="params">(vec)</span>:</span>    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> <span class="keyword">if</span> vec[<span class="number">0</span>] == <span class="string">'spam'</span> <span class="keyword">else</span> <span class="number">0</span>,vec[<span class="number">1</span>:];</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">textParse2</span><span class="params">(vec)</span>:</span> </span><br><span class="line">    <span class="keyword">return</span> vec[<span class="number">0</span>],vec[<span class="number">1</span>:];</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bagOfWords2VecMN</span><span class="params">(vocabList, inputSet)</span>:</span></span><br><span class="line">    returnVec = [<span class="number">0</span>]*len(vocabList)</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> inputSet:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> vocabList:</span><br><span class="line">            returnVec[vocabList.index(word)] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> returnVec</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setOfWords2VecMN</span><span class="params">(vocabList, inputSet)</span>:</span></span><br><span class="line">    returnVec = [<span class="number">0</span>]*len(vocabList)</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> inputSet:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> vocabList:</span><br><span class="line">            returnVec[vocabList.index(word)] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> returnVec</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createVocabList</span><span class="params">(dataSet)</span>:</span></span><br><span class="line">    vocabSet = set([])  </span><br><span class="line">    <span class="keyword">for</span> document <span class="keyword">in</span> dataSet:</span><br><span class="line">        vocabSet = vocabSet | set(document) </span><br><span class="line">    <span class="keyword">return</span> list(vocabSet)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tfIdf</span><span class="params">(trainMatrix,setMatrix)</span>:</span></span><br><span class="line">    n = len(trainMatrix)</span><br><span class="line">    m = len(trainMatrix[<span class="number">0</span>])</span><br><span class="line">    d = [n]*n;</span><br><span class="line">    tb = sum(trainMatrix,axis=<span class="number">1</span>)</span><br><span class="line">    tc = sum(setMatrix,axis=<span class="number">0</span>)</span><br><span class="line">    b = array(tb,dtype=<span class="string">'float'</span>)</span><br><span class="line">    c = array(tc,dtype=<span class="string">'float'</span>)</span><br><span class="line">    weight = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">        a = trainMatrix[:,i]</span><br><span class="line">        tf = a/b</span><br><span class="line">        weight.append(tf * log(d/(c[i])))</span><br><span class="line">    returnVec = array(weight).transpose()</span><br><span class="line">    <span class="keyword">return</span> returnVec</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trainNB0</span><span class="params">(trainMatrix,trainCategory,weight)</span>:</span></span><br><span class="line">    numTrainDocs = len(trainMatrix)</span><br><span class="line">    numWords = len(trainMatrix[<span class="number">0</span>])</span><br><span class="line">    pAbusive = sum(trainCategory)/float(numTrainDocs)</span><br><span class="line">    p0Num = ones(numWords); p1Num = ones(numWords)     </span><br><span class="line">    p0Denom = <span class="number">2.0</span>; p1Denom = <span class="number">2.0</span>      </span><br><span class="line">    a = <span class="number">0</span>;b = <span class="number">0</span></span><br><span class="line">    a += trainMatrix[<span class="number">0</span>];b += sum(trainMatrix[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(numTrainDocs):</span><br><span class="line">        <span class="keyword">if</span> trainCategory[i] == <span class="number">1</span>:</span><br><span class="line">            p1Num += trainMatrix[i]*weight[i]</span><br><span class="line">            p1Denom += sum(trainMatrix[i]*weight[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p0Num += trainMatrix[i]*weight[i]</span><br><span class="line">            p0Denom += sum(trainMatrix[i]*weight[i])</span><br><span class="line">    p1Vect = log(p1Num/p1Denom)     </span><br><span class="line">    p0Vect = log(p0Num/p0Denom)    </span><br><span class="line">    <span class="keyword">return</span> p0Vect,p1Vect,pAbusive</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classifyNB</span><span class="params">(vec2Classify, p0Vec, p1Vec, pClass1)</span>:</span></span><br><span class="line">    p1 = sum(vec2Classify * p1Vec) + log(pClass1)    </span><br><span class="line">    p0 = sum(vec2Classify * p0Vec) + log(<span class="number">1.0</span> - pClass1)</span><br><span class="line">    <span class="keyword">if</span> p1 &gt; p0:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spamTest</span><span class="params">()</span>:</span></span><br><span class="line">    trainFile = <span class="string">'./train.csv'</span></span><br><span class="line">    testFile = <span class="string">'./test.csv'</span></span><br><span class="line">    <span class="keyword">import</span> csv</span><br><span class="line">    docList=[]; classList = []; fullText =[]</span><br><span class="line">    in1 = open(trainFile);in1.readline()</span><br><span class="line">    fr1 = csv.reader(in1)</span><br><span class="line">    trainData = [row <span class="keyword">for</span> row <span class="keyword">in</span> fr1]</span><br><span class="line">    </span><br><span class="line">   <span class="comment">#prepare trainData</span></span><br><span class="line">    </span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> trainData:</span><br><span class="line">        label,wordList = textParse1(i)</span><br><span class="line">        docList.append(wordList)</span><br><span class="line">        classList.append(label)</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    vocabList = createVocabList(docList)</span><br><span class="line">    </span><br><span class="line">    trainMat = [];trainClasses = []</span><br><span class="line">    setMat = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> docIndex <span class="keyword">in</span> range(n):</span><br><span class="line">        trainMat.append(bagOfWords2VecMN(vocabList,docList[docIndex]))</span><br><span class="line">        setMat.append(setOfWords2VecMN(vocabList,docList[docIndex]))</span><br><span class="line">        trainClasses.append(classList[docIndex])</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#traiing by bayes</span></span><br><span class="line">    weight = tfIdf(array(trainMat),array(setMat))</span><br><span class="line">    </span><br><span class="line">    p0V,p1V,pSpam = trainNB0(array(trainMat),array(trainClasses),array(weight))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#prepare testData</span></span><br><span class="line">    </span><br><span class="line">    in2 = open(testFile);in2.readline()</span><br><span class="line">    fr2 = csv.reader(in2)</span><br><span class="line">    fw = csv.writer(open(<span class="string">'predict.csv'</span>, <span class="string">'w'</span>))</span><br><span class="line">    name = [<span class="string">'SmsId'</span>,<span class="string">'Label'</span>]</span><br><span class="line">    fw.writerow(name)</span><br><span class="line">    testData = [row <span class="keyword">for</span> row <span class="keyword">in</span> fr2]</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#predict testData</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> testData:</span><br><span class="line">        id,wordList = textParse2(i)</span><br><span class="line">        wordVector = bagOfWords2VecMN(vocabList, wordList)</span><br><span class="line">        fw.writerow([id,<span class="string">'spam'</span> <span class="keyword">if</span> classifyNB(array(wordVector),p0V,p1V,pSpam) <span class="keyword">else</span> <span class="string">'ham'</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#print 'fianl point'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      朴素贝叶斯
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/programming/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>vue &amp; cordova</title>
    <link href="http://yoursite.com/2018/07/07/vue-cordova/"/>
    <id>http://yoursite.com/2018/07/07/vue-cordova/</id>
    <published>2018-07-07T07:09:11.000Z</published>
    <updated>2018-07-07T11:22:19.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hybrid平台构建：（cordova-vue-webpack）"><a href="#Hybrid平台构建：（cordova-vue-webpack）" class="headerlink" title="Hybrid平台构建：（cordova + vue + webpack）"></a>Hybrid平台构建：（cordova + vue + webpack）</h1><ul><li>cordova</li></ul><hr><p>本文阐述了如何为Hybird移动应用构建开发平台，包含以下内容</p><ol><li>Cordova + vue + webpack</li><li>Jest/Mocha-Karma 测试</li><li>Nighwatch 函数测试</li><li>浏览器预览</li><li>热重载</li><li>打包成Android/IOS应用<a id="more"></a></li></ol><h3 id="何为Hybird应用"><a href="#何为Hybird应用" class="headerlink" title="何为Hybird应用"></a>何为Hybird应用</h3><blockquote><p>所谓Hybird应用，即为一个内嵌于原生应用中运行的网站。其中webview相关代码部分是即时翻译运行的，而其中原生部分在应用运行之前就已编译成机器码。</p></blockquote><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><blockquote><p>unbantu Deepin 15.6<br>node.js v9.8.0<br>cordova v6.0.0<br>vue v2.9.3</p></blockquote><h3 id="构建步骤"><a href="#构建步骤" class="headerlink" title="构建步骤"></a>构建步骤</h3><ol><li><p>创建cordova项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova create hybird-base</span><br></pre></td></tr></table></figure></li><li><p>创建vue项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack hybird-test</span><br></pre></td></tr></table></figure></li><li><p>合并cordova和vue项目</p><blockquote><p>此时的cordova项目结构如下</p></blockquote><p><img src="/picture/tree.png" alt="tree"></p><blockquote><p>删除www下的内容，因为这是cordova将打包到移动设备的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> rm -r ./www</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>修改vue项目./config/index.js的打包命令，修改index和assertsRoot路径为./www，修改assertsPublicPath路径为空串，因为该项目需要到移动设备中运行，视图的显示应该来源于file:///而非是web服务器</p><p><img src="/picture/path.png" alt="path"></p><p>打包成功后的www目录如下</p><p><img src="/picture/tree2.png" alt="tree2"></p><p>可以通过file:///协议访问index.html，即将该文件以chrome打开</p><p><img src="/picture/page.png" alt="page"></p><p>接下来需要通过修改Content-Security-Policy以便允许本地socket通信服务。即添加connect-src ‘self’ ws:;</p><p><img src="/picture/code.png" alt="code"></p><p>将www移到cordova目录之下</p></blockquote></li><li><p>在Android下运行</p><blockquote><p>将www移到cordova项目根目录下</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cordova platform add android</span><br><span class="line">cordova run android</span><br></pre></td></tr></table></figure><p>​</p><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hybrid平台构建：（cordova-vue-webpack）&quot;&gt;&lt;a href=&quot;#Hybrid平台构建：（cordova-vue-webpack）&quot; class=&quot;headerlink&quot; title=&quot;Hybrid平台构建：（cordova + vue + webpack）&quot;&gt;&lt;/a&gt;Hybrid平台构建：（cordova + vue + webpack）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;cordova&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文阐述了如何为Hybird移动应用构建开发平台，包含以下内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cordova + vue + webpack&lt;/li&gt;
&lt;li&gt;Jest/Mocha-Karma 测试&lt;/li&gt;
&lt;li&gt;Nighwatch 函数测试&lt;/li&gt;
&lt;li&gt;浏览器预览&lt;/li&gt;
&lt;li&gt;热重载&lt;/li&gt;
&lt;li&gt;打包成Android/IOS应用
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/programming/"/>
    
    
      <category term="cordova" scheme="http://yoursite.com/tags/cordova/"/>
    
      <category term="vue.js" scheme="http://yoursite.com/tags/vue-js/"/>
    
  </entry>
  
</feed>
